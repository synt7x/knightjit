local test = require("tests/harness")

return section("EXPONENTIATE", function()
	describe("when the first argument is an integer", function()
		it("raises positive integers correctly", function()
			test.assert("1", "^ 1 1")
			test.assert("1", "^ 1 100")
			test.assert("16", "^ 2 4")
			test.assert("125", "^ 5 3")
			test.assert("3375", "^ 15 3")
			test.assert("15129", "^ 123 2")
		end)

		it("raises negative positive integers correctly", function()
			test.assert("-1", "^ ~1 1")
			test.assert("1", "^ ~1 2")
			test.assert("-1", "^ ~1 3")
			test.assert("1", "^ ~1 4")
			test.assert("1", "^ ~1 100")
			test.assert("16", "^ ~2 4")
			test.assert("-32", "^ ~2 5")
			test.assert("-125", "^ ~5 3")
			test.assert("625", "^ ~5 4")
			test.assert("-3375", "^ ~15 3")
			test.assert("50625", "^ ~15 4")
			test.assert("15129", "^ ~123 2")
			test.assert("-1860867", "^ ~123 3")
		end)

		it("always returns 1 for exponents of 0", function()
			test.assert("1", "^ 0 0")
			test.assert("1", "^ 1 0")
			test.assert("1", "^ 2 0")
			test.assert("1", "^ 5 0")
			test.assert("1", "^ 15 0")
			test.assert("1", "^ 123 0")
			test.assert("1", "^ ~1 0")
			test.assert("1", "^ ~2 0")
			test.assert("1", "^ ~5 0")
			test.assert("1", "^ ~15 0")
			test.assert("1", "^ ~123 0")
		end)

		it("returns 0 when the base is zero, unless the power is zero", function()
			test.assert("0", "^ 0 1")
			test.assert("0", "^ 0 100")
			test.assert("0", "^ 0 4")
			test.assert("0", "^ 0 3")
		end)

		it("converts other values to integers", function()
			test.assert("225", "^ 15 '2'")
			test.assert("1", "^ 91 FALSE")
			test.assert("1", "^ 91 NULL")
		end)
	end)
end)
