local test = require("tests/harness")

return section("DIVIDE", function()
	it("divides nonzero integers normally", function()
		test.assert("1", "/ 1 1")
		test.assert("5", "/ 10 2")
		test.assert("-5", "/ ~10 2")
		test.assert("-10", "/ 40 ~4")
		test.assert("20", "/ ~80 ~4")
		test.assert("3", "/ 13 4")
		test.assert("-3", "/ 13 ~4")
		test.assert("-3", "/ ~13 4")
		test.assert("3", "/ ~13 ~4")
	end)

	it("rounds downwards", function()
		test.assert("0", "/ 4 5")
		test.assert("2", "/ 10 4")
		test.assert("-1", "/ ~5 3")
		test.assert("-2", "/ ~7 3")
	end)

	it("evaluates arguments in order", function()
		test.assert("15", "/ (= n 45) (- n 42)")
		test.assert("15", "/ (= n 15) (- n 14)")
		test.assert("-15", "/ (= n 15) (- n 16)")
	end)

	it("converts other values to integers", function()
		test.assert("7", "/ 15 '2'")
		test.assert("22", "/ 91 '4'")
		test.assert("9", "/ 9 TRUE")
		test.assert("4", "/ 9 +@12")
	end)

	it("does not divide by zero", function()
		test.refute("/ ~1 0")
		test.refute("/ 100 0")
		test.refute("/ 100 ''")
		test.refute("/ 1 FALSE")
		test.refute("/ 1 NULL")
		test.refute("/ 1 @")
	end)

	it("only allows an integer as the first operand", function()
		test.refute("/ TRUE 1")
		test.refute("/ FALSE 1")
		test.refute("/ NULL 1")
		test.refute("/ 'not-a-integer' 1")
		test.refute("/ '123' 1")
		test.refute("/ +@123 1")
	end)

	it("does not allow a block as any operand", function()
		test.refute("; = a 3 : / (BLOCK a) 1")
		test.refute("; = a 3 : / 1 (BLOCK a)")
		test.refute("/ (BLOCK QUIT 0) 1")
		test.refute("/ 1 (BLOCK QUIT 0)")
	end)

	it("requires exactly two arguments", function()
		test.refute("/")
		test.refute("/ 1")
		test.must("/ 1 1")
	end)
end)
