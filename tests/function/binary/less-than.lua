local test = require("tests/harness")

return section("LESS-THAN", function()
	describe("when the first arg is a boolean", function()
		it("is only true when FALSE and the rhs is truthy", function()
			test.assert("true", "< FALSE TRUE")
			test.assert("true", "< FALSE 1")
			test.assert("true", "< FALSE '1'")
			test.assert("true", "< FALSE ~1")
			test.assert("true", "< FALSE ,1")
		end)

		it("is false all other times", function()
			test.assert("false", "< FALSE FALSE")
			test.assert("false", "< FALSE 0")
			test.assert("false", "< FALSE ''")
			test.assert("false", "< FALSE NULL")
			test.assert("false", "< FALSE @")
			test.assert("false", "< TRUE TRUE")
			test.assert("false", "< TRUE FALSE")
			test.assert("false", "< TRUE 1")
			test.assert("false", "< TRUE '1'")
			test.assert("false", "< TRUE 2")
			test.assert("false", "< TRUE ~2")
			test.assert("false", "< TRUE 0")
			test.assert("false", "< TRUE ''")
			test.assert("false", "< TRUE NULL")
			test.assert("false", "< TRUE @")
			test.assert("false", "< TRUE ,1")
		end)
	end)

	describe("when the first arg is a string", function()
		it("performs lexicographical comparison", function()
			test.assert("true", "< 'a' 'aa'")
			test.assert("false", "< 'b' 'aa'")
			test.assert("false", "< 'aa' 'a'")
			test.assert("true", "< 'aa' 'b'")
			test.assert("true", "< 'A' 'AA'")
			test.assert("false", "< 'B' 'AA'")
			test.assert("false", "< 'AA' 'A'")
			test.assert("true", "< 'AA' 'B'")
			test.assert("false", "< 'a' 'A'")
			test.assert("true", "< 'A' 'a'")
			test.assert("false", "< 'z' 'Z'")
			test.assert("true", "< 'Z' 'z'")
			test.assert("true", "< '/' '0'")
			test.assert("true", "< '8' '9'")
		end)

		it("performs it even with integers", function()
			test.assert("true", "< '0' '00'")
			test.assert("true", "< '1' '12'")
			test.assert("true", "< '100' '12'")
			test.assert("false", "< '00' '0'")
		end)
	end)
end)
