local test = require("tests/harness")

return section("SUBTRACT", function()
	it("subtracts integers normally", function()
		test.assert("0", "- 0 0")
		test.assert("-1", "- 1 2")
		test.assert("-2", "- 4 6")
		test.assert("113", "- 112 ~1")
		test.assert("-9", "- 4 13")
		test.assert("17", "- 4 ~13")
		test.assert("-17", "- ~4 13")
		test.assert("9", "- ~4 ~13")
	end)

	it("converts other values to integers", function()
		test.assert("-1", "- 1 '2'")
		test.assert("46", "- 91 '45'")
		test.assert("8", "- 9 TRUE")
		test.assert("9", "- 9 FALSE")
		test.assert("9", "- 9 NULL")
		test.assert("6", "- 9 +@145")
	end)

	it("evaluates arguments in order", function()
		test.assert("87", "- (= n 45) (- 3 n)")
		test.assert("16", "- (= n 15) (- 14 n)")
		test.assert("14", "- (= n 15) (- 16 n)")
	end)

	it("errors on overflow", function()
		test.todo("overflow (need to get bit length)")
	end)

	it("only allows an integer as the first operand", function()
		test.refute("- TRUE 1")
		test.refute("- FALSE 1")
		test.refute("- NULL 1")
		test.refute("- 'not-a-integer' 1")
		test.refute("- '123' 1")
		test.refute("- @ 1")
	end)

	it("does not allow a block as any operand", function()
		test.refute("; = a 3 : - (BLOCK a) 1")
		test.refute("; = a 3 : - 1 (BLOCK a)")
		test.refute("- (BLOCK QUIT 0) 1")
		test.refute("- 1 (BLOCK QUIT 0)")
	end)

	it("requires exactly two arguments", function()
		test.refute("-")
		test.refute("- 1")
		test.must("- 1 1")
	end)
end)
