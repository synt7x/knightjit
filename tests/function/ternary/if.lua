local test = require("tests/harness")

return section("IF", function()
	it("executes and returns only the correct value", function()
		test.assert("12", "IF TRUE 12 (QUIT 1)")
		test.assert("12", "IF FALSE (QUIT 1) 12")
	end)

	it("executes the condition before the result", function()
		test.assert("12", "IF (= a 3) (+ a 9) (QUIT 1)")
	end)

	it("converts values to a boolean", function()
		test.assert("12", "IF 123 12 (QUIT 1)")
		test.assert("12", "IF 0 (QUIT 1) 12 ")
		test.assert("12", 'IF "123" 12 (QUIT 1)')
		test.assert("12", 'IF "0" 12 (QUIT 1)')
		test.assert("12", 'IF "" (QUIT 1) 12')
		test.assert("12", "IF NULL (QUIT 1) 12")
		test.assert("12", "IF @ (QUIT 1) 12")
		test.assert("12", "IF +@0 12 (QUIT 1)")
	end)

	it("accepts blocks as either the second or third argument", function()
		test.must("IF TRUE (BLOCK QUIT 1) (QUIT 1)")
		test.must("IF FALSE (QUIT 1) (BLOCK QUIT 1)")
	end)

	it("does not accept BLOCK values as the condition (strict types)", function()
		test.refute("IF (BLOCK QUIT 0) 0 0")
		test.refute("; = a 3 : IF (BLOCK a) 0 0")
	end)

	it("requires exactly three arguments (argument count)", function()
		test.refute("IF")
		test.refute("IF TRUE")
		test.refute("IF TRUE 1")
		test.must("IF TRUE 1 2")
	end)
end)
