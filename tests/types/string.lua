local test = require("tests/harness")

return section("string", function()
	-- bounds omitted
	describe("conversions", function()
		describe("integer", function()
			it("parses normal integer strings correctly", function()
				test.assert("0", '+0 "0"')
				test.assert("1", '+0 "1"')
				test.assert("123", '+0 "123"')
				test.assert("123", '+0 "+123"')
				test.assert("-123", '+0 "-123"')
			end)
			it("returns zero if there is a space after the + or -", function()
				test.assert("0", '+0 "+ 123"')
				test.assert("0", '+0 "- 123"')
			end)
			it("returns zero for the empty string", function()
				test.assert("0", "+0 ''")
			end)
			it("converts non-numeric strings to zero", function()
				test.assert("0", '+0 "hello"')
				test.assert("0", '+0 "zero"')
				test.assert("0", '+0 "x123"')
			end)
			it("returns zero if there is a leading ~", function()
				test.assert("0", '+0 "~123"')
			end)
			-- it("strips leading whitespace", function()
			-- 	test.assert("456", '+0 "    \n\r  456"')
			-- 	test.assert("456", '+0 "    \n\r +456"')
			-- 	test.assert("-456", '+0 "    \n\r -456"')
			-- 	test.assert("0", '+0 "    \n\r+ 456"')
			-- 	test.assert("0", '+0 "    \n\r- 456"')
			-- end)
			it("stops after the first digit", function()
				test.assert("12", '+0 " 12a"')
				test.assert("12", '+0 "12a34"')
				test.assert("12", '+0 "\t 12a34"')
			end)
			it("does not parse escapes", function()
				test.assert("111", '+0 "00111"')
				test.assert("0", '+0 "0x3f"')
				test.assert("0", '+0 "0b11"')
				test.assert("0", '+0 "0o17"')
				test.assert("0", '+0 "0d13"')
			end)
		end)
	end)
end)
